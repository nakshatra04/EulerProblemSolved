/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**** Problem StateMent *****/

/*
https://projecteuler.net/problem=2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.
*/

/**
 *
 * @author naksh
 */
public class Problem2 {
    
    int[] febonacciSeries;
    int sum= 2;
    int lastNumber;
    
    public Problem2 (int endNumber)
    {
       lastNumber = endNumber;
       febonacciSeries = new int[lastNumber];
       
    }
    
    public int calculateSum()
    {
        int i = 2;
       febonacciSeries[1]=2;
       febonacciSeries[0]=1;
       boolean keepRunning= true;
       
        while (keepRunning){
            
            febonacciSeries[i]= febonacciSeries[i-1]+ febonacciSeries[i-2];
            if (febonacciSeries[i]> lastNumber)
            {
                keepRunning = false;
                break;
            }
            printMessage("i is = " +i+ " and series = "+ febonacciSeries[i] +  " "+ febonacciSeries[i-1]+"  "+ febonacciSeries[i-2]);
            
            if (febonacciSeries[i]%2 == 0)
            {
            sum = sum+febonacciSeries[i];
                printMessage("Adding it ="+ febonacciSeries[i]);
            }
            
            
            i++;
          }
        
          return sum;
    }
    public void printMessage(String msg)
    {
        System.out.println(msg);
    }
    public static void main(String args[])
    {
        Problem2 obj = new Problem2(4000000);
        obj.printMessage("The total sum is = " +obj.calculateSum());
        
        
    }
  
            
    
}
